{"version":3,"sources":["components/TodoItem/index.js","components/List/index.js","components/Todo/index.js","store/actions/addTodo.js","store/actions/deleteTodo.js","store/actions/updateTodos.js","store/reducers/todoReducer.js","store/reducers/rootReducer.js","store/index.js","App.js","index.js"],"names":["TodoItem","props","className","type","onClick","killTodo","todo","id","completed","title","removeTodo","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","List","todos","map","index","key","Todo","handleChange","event","setState","currentTodo","state","target","value","addTodo","newTodo","preventDefault","dispatch","getState","payload","todo_id","deleteTodo","newTodos","filter","toggleCompleted","updateTodos","onSubmit","this","placeholder","onChange","React","Component","connect","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6b07991.chunk.js","sourcesContent":["import React from 'react'\nimport '../Todo/index.scss'\n\nconst TodoItem = (props) => {\n    \n    const toggleComplete = () => {\n        props.killTodo(props.todo.id)\n    }\n\n    const removeTodo = () => {\n        props.removeTodo(props.todo.id)\n    }\n\n    return(\n        <div className='list-element'>\n            <label className='container'>\n                <input type=\"checkbox\" onClick={ toggleComplete } />\n                <span className='custom-checkbox'></span>\n\n            </label>\n            <li className={ props.todo.completed ? 'completed-todo' : ''}>{props.todo.title}</li>\n            <button className='delete-btn' onClick={ removeTodo } >\n                <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"trash\" className=\"svg-inline--fa fa-trash fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z\"></path></svg>\n            </button>\n        </div>\n    )\n}\n\nexport default TodoItem","import React from 'react'\nimport TodoItem from '../TodoItem'\nimport '../Todo/index.scss'\n\nconst List = (props) => {\n    return(\n        <ul className='todos-list'>\n            {\n                props.todos.map((todo, index) => {\n                    return <TodoItem \n                    todo={todo} \n                    key={index}\n                    killTodo={props.killTodo}\n                    removeTodo={props.removeTodo}\n                    />\n                })\n            }\n        </ul>\n    )\n}\n\nexport default List","import React from 'react'\nimport List from '../List'\nimport { connect } from 'react-redux'\nimport { addTodoAction } from '../../store/actions/addTodo'\nimport { updateTodos } from '../../store/actions/updateTodos'\nimport { deleteTodo } from '../../store/actions/deleteTodo'\n\nimport './index.scss'\n\nclass Todo extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.todo_id = 5\n        this.state = {\n            currentTodo: {\n                id: this.todo_id,\n                title: '',\n                completed: false,\n            },\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            currentTodo: {\n                ...this.state.currentTodo,\n                title: event.target.value\n            }\n\n        })\n    }\n\n    addTodo = (event) => {\n        event.preventDefault();\n        this.props.dispatch(addTodoAction(this.state.currentTodo))\n        this.setState({\n            currentTodo: {\n                ...this.state.currentTodo,\n                title: '',\n                id: this.todo_id += 1\n            }\n        })\n    }\n\n    deleteTodo = (id) => {\n        const newTodos = this.props.todos\n        .filter(todo => todo.id !== id)\n        .map(todo => todo)\n        this.props.dispatch(deleteTodo(newTodos))\n    }\n\n    toggleCompleted = (id) => {\n        const newTodos = this.props.todos.map(todo => {\n            if(todo.id === id){\n                todo.completed = !todo.completed\n                return todo\n            }\n            return todo\n        })\n        this.props.dispatch(updateTodos(newTodos))\n    }\n\n    render() {\n        return(\n            <div className='todo-wrapper'>\n                <div className='header'>\n                    <h1 className='app-title'>a todo list with React & Redux</h1>\n                    <form className='add-todo-form' onSubmit={this.addTodo}>\n                        <input className='add-todo-field' type=\"text\" placeholder='Add a new todo..' \n                        onChange={this.handleChange} value={this.state.currentTodo.title} />\n                        <button className='add-todo-btn' type='submit'>\n                            <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"plus\" className=\"svg-inline--fa fa-plus fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"></path></svg>\n                        </button>\n                    </form>\n                </div>\n                    <List todos={this.props.todos} killTodo={this.toggleCompleted} removeTodo={this.deleteTodo}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        todos: state.todos.todos\n    }\n}\n\nexport default connect(mapStateToProps)(Todo)","export const addTodoAction = (newTodo) => (dispatch, getState) => {\n    const action = {\n        type: 'ADD_TODO',\n        payload: newTodo,\n    }\n    dispatch(action)\n}","export const deleteTodo = (newTodos) => (dispatch, getState) => {\n    const action = {\n        type: 'DELETE_TODO',\n        payload: newTodos\n    }\n    dispatch(action)\n}","export const updateTodos = (newTodos) => (dispatch, getState) => {\n    const action = {\n        type: 'UPDATE_TODOS',\n        payload: newTodos,\n    }\n    dispatch(action)\n}","const initialState = {\n    todos: [\n        {\n            id: 1,\n            title: 'remember to forget Cynthia',\n            completed: false,\n        },\n        {\n            id: 2,\n            title: `book table at Dorsia's`,\n            completed: false,\n        },\n        {\n            id: 3,\n            title: `take pills`,\n            completed: false,\n        },\n        {\n            id: 4,\n            title: `return videotapes`,\n            completed: false,\n        },\n    ]\n}\n\nexport const todos = (state=initialState, action) => {\n    if(action.type === 'ADD_TODO') {\n        return {\n            ...state,\n            todos: [...state.todos, action.payload]\n        }\n    }\n    if(action.type === 'UPDATE_TODOS') {\n        return {\n            ...state,\n            todos: [...action.payload]\n        }\n    }\n    if(action.type === 'DELETE_TODO') {\n        return {\n            ...state,\n            todos: [...action.payload]\n        }\n    }\n    return state\n}","import { combineReducers } from 'redux'\nimport { todos } from './todoReducer'\n\nexport const rootReducer = combineReducers({\n    todos,\n})\n\n","import { createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport { rootReducer } from './reducers/rootReducer'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n","import React from 'react';\nimport './App.scss';\nimport Todo from './components/Todo'\nimport { Provider } from 'react-redux'\nimport { store } from './store/index'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Todo />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n    <App />, \n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}